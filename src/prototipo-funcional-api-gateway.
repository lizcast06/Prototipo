**/Conectar tu repo local con GitHub

**/En tu terminal:
git remote add origin https://github.com/TU-USUARIO/prototipo-funcional-api-gateway.git
git branch -M main
git push -u origin main

**/ Crear un README claro (ðŸ“„ muy importante)

**/ En Prototipo funcional/README.md pon algo asÃ­:
# Prototipo Funcional con API Gateway

## DescripciÃ³n
Este prototipo demuestra una arquitectura basada en **microservicios** con un **API Gateway (Express Gateway)** que actÃºa como punto de entrada para el frontend.

## Estructura del proyecto
- **Back-end**
  - `auth-service/` â†’ microservicio de autenticaciÃ³n.
  - `pagos-service/` â†’ microservicio de pagos (usado como enrollments).
  - `api-gateway/` â†’ configuraciÃ³n de Express Gateway.
  - `database/` â†’ base de datos.
- **Front-end**
  - `pagos-frontend/` â†’ cliente web que consume los endpoints del gateway.

## CÃ³mo correr el proyecto
1. Clona el repositorio:
   ```bash
   git clone https://github.com/TU-USUARIO/prototipo-funcional-api-gateway.git
   cd prototipo-funcional-api-gateway/Back-end

2. Levanta servicios con Docker:
  docker-compose up --build

3. El API Gateway quedarÃ¡ disponible en:
  http://localhost:8080/api/auth/*
  http://localhost:8080/api/enrollments/*

**/ Seguridad

## El API Gateway incluye validaciÃ³n de tokens JWT para proteger endpoints sensibles.

**/ Autor

## Proyecto realizado por Rey Gasparchu


---

### 5. Subir cambios
DespuÃ©s de crear el README:

```bash
git add README.md
git commit -m "Agregar README inicial"
git push origin main
